%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox:  0 0 451 145 %%Title: (Untitled-2) %%Creator: Canvas (8.0.4) %%CreationDate: (06/16/11 @ 11:07 AM) %%DocumentProcSets: Deneba_CanvasCustomColors%%+ CVDict%%DocumentFonts: %%DocumentNeededFonts: GoudyOldStyleT-Bold%%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginProlog %%BeginResource: procset CVDict%%Title: Deneba standard graphics%%Version: 1.02%%CreationDate: 10/14/99%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserveduserdict /CVDict 200 dict putCVDict begin/invalidcolortable? true def   /level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse deflevel2 not { /xshow {0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshowpop pop pop pop} def } if/initialize{CVDict{dup xcheck{bind}if pop pop}forallcurrentscreen /_sp exch def /_sa exch def /_sf exch def/DefaultScreen{_sf _sa /_sp load}def/DefaultScreenProc{ /_sp load}def/setstrokeadjust where{pop true}{false}ifelse{/sa /setstrokeadjust load def/li /lineto load def/mt /moveto load def/ct /curveto load def/lh { currentpoint exch pop lineto}bind def/lv { currentpoint pop exch lineto}bind def}{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind defuserdict /StrokeAdjustDict 100 dict putStrokeAdjustDict begin/_xl{transform.25 sub round .25 add exch.25 sub round .25 add exchitransform}bind def/li{ _xl lineto}bind def/mt{ _xl moveto}bind def/ct{ _xl curveto}bind def/lh { dup _xl pop currentpoint exch pop lineto}bind def/lv { dup _xl pop currentpoint pop exch lineto}bind def/rp{_xl/cv_b xdf/cv_r xdf_xl/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}bind defend}ifelse}def/terminate{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}ifcurrentdict CVDict eq{end}if}def/mxMax 64 def/mxStk [mxMax {matrix} repeat]def/mxIdx 0 def/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def/scl { 72 div exch 72 div exch scale } def/scli { 72 exch div exch 72 exch div exch scale } def/_cvmtx matrix def/_txtmtx matrix def/_initmtx matrix def/xdf{exch def}def/min{2 copy gt{exch}if pop}def/max{2 copy lt{exch}if pop}def/CVvec 256 array def/T true def/F false def/_id 0 def/_encodindex 0 def/_encodArr 3 array def/_fd 0 def/_textSave null def/_letterSpace 0 def/_spaceXtra 0 def/_PageSave null def/_penh 1.0 def/_penv 1.0 def/save0 null def/_w 0 def/_h 0 def/_ds 0 def/hct false def/pw 0 def/wdif 0 def/temp 0 def/currot 0 def/savehandler null def/ia 0 def/ix 0 def/ixn 1 def/MultipleDataSources false def /debug{dup /$eps exch not def{/savehandler errordict /handleerror get deferrordict/handleerror{$error beginnewerror{/newerror false defshowpage72 72 scale/Helvetica findfont .2 scalefont setfont.25 9.6 moveto(Error: )showerrorname{dup type/stringtype ne{(converted error name will end up in this string)cvs}ifshow}exec.25 9.4 moveto(Offending Command: )show/command load{dup type/stringtype ne{(converted command name will end up in this string)cvs}ifshow}exec.25 9.2 moveto(Stack: )showostack{.25 currentpoint .2 sub exch pop movetodup type/stringtype ne{dup type/integertype eq1 index type/realtype eq or1 index type/nametype eq ornot {type}if(converted stack will end up in this string)cvs}ifshow}forallshowpageCVDict /savehandler get exec}ifend}put}if}def/lc{setlinecap}def/lj{setlinejoin}def/lm{setmiterlimit}def/lf{setflat}def/cp{closepath}def/np{newpath}def/$psz 30 array def/$pix 0 def/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def/li{lineto} def/lh{currentpoint exch pop lineto}def/lv{currentpoint pop exch lineto}def/mt{moveto} def/_cv_mh{currentpoint exch pop moveto}def/_cv_mv{currentpoint pop exch moveto}def/ct{curveto} def/rt{4 -2 roll movetodup 0 exch rlinetoexch 0 rlinetoneg 0 exch rlinetoclosepath}def/_hr{{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}}def/_cs null def/fg{setgray}def/setcmykcolor where {pop true}{false}ifelse{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse/setcolorspace where {pop true}{false}ifelse{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse/$cc 5 array def/findcmykcustomcolor where {pop true}{false}ifelsenot {/findcmykcustomcolor{$cc astore}def}if/setcustomcolor where {pop true}{false}ifelsenot{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def/setseparationgray where {pop true}{false}ifelsenot{/setseparationgray {systemdict /setgray get exec} def}if/sg{ setseparationgray}def/sp{/_penv xdf/_penh xdf}def/rp{/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l cv_t movetocv_r cv_t linetocv_r cv_b linetocv_l cv_b linetoclosepath}def/rr{/yradius xdf/xradius xdf/cv_b xdf/cv_r xdf/cv_t xdf/cv_l xdfcv_l xradius add cv_t movetocv_r xradius sub cv_t lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale1 0 1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_r cv_b yradius sub lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 1 -1 1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l xradius add cv_b lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale-1 0 -1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixcv_l cv_t yradius add lineto_cvmtx currentmatrix popcurrentpoint translatexradius yradius scale0 -1 1 -1 1 arcto 4{pop}repeat_cvmtx setmatrixclosepath}def/ep{_cvmtx currentmatrix poptranslatescale1 0 moveto0 0 1 0 360 arcclosepath_cvmtx setmatrix}def/wd{_cvmtx currentmatrix poptranslatescale0 0 moveto0 0 1 5 -2 roll arcnclosepath_cvmtx setmatrix}def/as{_cvmtx currentmatrix poptranslatescale0 0 1 5 -2 roll arcn_cvmtx setmatrix}def/ds{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def/df{fill}def/de{eofill}def/_gstk 5 array def/_gstkc 0 def/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def/hs{newpath gsave stm}def/hc{/_hr load exch get exec newpath}def/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq not{aload pop moveto}{pop}ifelse dup /_cf get setfontdup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def/id{ /_id xdf}def/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.% All rights reserved.level2 { save /dontloadlevel1 xdf }if/startnoload{{/noload save def} if}def/endnoload{{noload restore}if }def/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def/ncolors 1 def/colorimage where{pop true}{false}ifelse{/ncolors 0statusdict begin /processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known{pop {deviceinfo /Colors get}}if}if}ifelse end defncolors 0 ne{/colorimage testsystemdict/setcolortransfer testsystemdict/currentcolortransfer testsystemdict/currentcmykcolor testsystemdictand and and not{/ncolors 0 def}if}if}ifncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}ifncolors 1 eq dup dup not startnoload{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] cvx bind settransfer _w _h 8 _imatrix _ds image}def}ifnot endnoloadncolors dup 3 eq exch 4 eq ordup dup not startnoload{/nullproc{{}}def/concatutil{/exec load7 -1 roll /exec load}def/defsubclut{1 add getinterval def}def/spconcattransfer   {/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ldcurrentcolortransfer[{Aclut ncompute}concatutil] cvx[{Bclut ncompute}concatutil] cvx[{Cclut ncompute}concatutil] cvx[{Dclut ncompute}concatutil] cvxsetcolortransfer}def/setuprgbcluts{/bit3x rgbclut length 3 sub def/bit1x bit3x 3 idiv def/rclut rgbclut def/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  endnoload ncolors 3 eq dup dup not startnoload{/3compute{exch bit3x mulround cvi get 255 div}def/doclutimage{%/rgbclut xdf pop setuprgbcluts/3compute rclut gclut bclut dupspconcattransfer _w _h 8 _imatrix[/_ds load /exec load /dup load dup]cvxnullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload{/stuffclut{cmykindex 3 -1 roll put}def/ftoint{1 exch sub 255 mul round cvi}def/4compute { exch bit4x mul round cvi get 255 div } def/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def/cmykclut bit4x 4 add string def/cclut cmykclut def/mclut cclut 1 bit4x defsubclut/yclut cclut 2 bit4x defsubclut/kclut cclut 3 bit4x defsubclut/cmykindex 0 def0 1 bit1x{dup /cmykindex exch bit1x exch sub 4 mul def3 mul dup rclut exch get 255 div exch dup gclut exch get 255 divexch bclut exch get 255 divsetrgbcolor currentcmykcolorftoint kclut stuffclutftoint yclut stuffclutftoint mclut stuffclutftoint cclut stuffclut}for}def/doclutimage{invalidcolortable?{computecmykclut}if/4compute cclut mclut yclut kclut spconcattransfer_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx nullproc nullproc nullproc true 4 colorimage}def}ifnot endnoloadncolors 0 eqdup dup not startnoload{/colorexpand{mystringexp 0 rgbclut3 copy7 -1 roll{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forallpop pop pop pop pop}def/createexpandstr{/mystringexp exch st0 length mul string def}def/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix[/_ds load /exec load /colorexpand load /exec load] cvxfalse 3 colorimage}def}if not endnoloadlevel2 { dontloadlevel1 restore }iflevel2 not{ save /dontloadlevel2 xdf }if/rgbclut 0 def/doclutimage{/hival 255 def [/Indexed /DeviceRGB hival rgbclut] setcolorspace_imagedict dup begin /Width _w def /Height _h def  /Decode [0 hival] def  /ImageMatrix _imatrix def/BitsPerComponent 8 def /Interpolate false defend image}deflevel2 not{ dontloadlevel2 restore }if%%EndProcSet/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def/hascolor true def/level2 systemdict /languagelevel known{languagelevel 2 ge}{false}ifelse def/foureq {4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 roll4 index eq 8 1 rollpop pop pop pop and and and} def/setupbands{gsave/_settransfer systemdict /settransfer get def/_currenttransfer systemdict /currenttransfer get def/_image systemdict /image get def/blank 0 _currenttransfer exec1 _currenttransfer exec eq def/negative blank{0 _currenttransfer exec 0.5 lt}{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def/inverted? negative def/_currentgray systemdict /currentgray get defhascolor{/$b 0 def} {/$b 5 def} ifelse/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub0 1 0 0 setcmykcolor _currentgray 1 exch sub0 0 1 0 setcmykcolor _currentgray 1 exch sub0 0 0 1 setcmykcolor _currentgray 1 exch sub4 {4 copy} repeat1 0 0 0 foureq{/$b 1 store}if0 1 0 0 foureq{/$b 2 store}if0 0 1 0 foureq{/$b 3 store}if0 0 0 1 foureq{/$b 4 store}if0 0 0 0 foureq{/$b 6 store}if}ifblank{/$b 6 store}if$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def/doimage{level2{image}{beginWidth Height BitsPerComponent ImageMatrixDecode length 2 eq{/DataSource load end image}{Decode length 6 eq{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelseMultipleDataSources 3 end DSIColorImage}{Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 getDataSource 2 get DataSource 3 get}{/DataSource load}ifelseMultipleDataSources 4 end DSIColorImage}if}ifelse}ifelse}ifelse}def/dt{/rgbclut xdf /bwclut xdf}def/cl{$i setmatrix translate scale/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get defdoclutimage} def/cd{$i setmatrix translate scalelevel2{_imagedict /ColorSpace get setcolorspace}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin/ImageMatrix _imatrix defcurrentdict enddoimage} def/im{$i setmatrix translate scale level2{/DeviceGray setcolorspace 0 setgray}if/_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_imagedict begin%/Decode [0 1] def  %/Width _w def%/Height _h def/ImageMatrix _imatrix defcurrentdict end doimage }def/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul addcvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dupst0 exch get .3 mul1 index 1 add st0 exch get .59 mul add1 index 2 add st0 exch get .11 mul add1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if255.0 exch sub cviexch 4 div cvi exchst1 3 1 roll put}for st1}}ifelseimage}def}ifelse/OPIimage{image}def/$i matrix def/bi{scale translate $i currentmatrix pop translate scale setupbands}def/ei{$i setmatrix}def/ik{$i setmatrix translate scale /_w _imagedict /Width get def/_h _imagedict /Height get def/_ds _imagedict /DataSource get def_w _h false _imatrix 5 -1 roll _ds imagemask}def/rs{2 copy translate3 -1 roll neg rotateneg exch neg exch translate}def/cs{_cvmtx astore concat} def/fd{/_fd xdf}def/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def/rf{/_encodindex xdfFontDirectory exch known {findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}foralldup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}{exch pop}ifelse}forall pop}if}ifcurrentdict enddefinefont pop }{pop pop}ifelse} def/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def/wrk1 ( ) def/wdict 16 dict def/Work75 75 string def/Nmk{Work75 cvs dup}def/Npt{put cvn}def/dhOdh{Nmk 2 79 Npt}def/dhBdh{Nmk 2 111 Npt}def/dhSdh{Nmk 2 83 Npt}def/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def/fts{/ftSize exch def}def/mkFT{dup/FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forallcurrentdict enddup/FDepVector 2 copy get[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict deftempFT begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 defdup/Encoding get/Encoding exch def/proc2 2 index defdup/ft1 exch def/ft2 1 array def/FontBBox [0 0 1 1] def/BuildChar{CVDict beginexch dup/ftdt xdf beginwdict begin/chr xdf/chrst wrk1 dup 0 chr put defft2 0 get null eq{ft1 dup length 2 add dict begin{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop defcurrentdict end/q exch definefontft2 exch 0 exch put}ifftdt/proc2 get exec end end end}def end tempFT}ifelse3 index exchdefinefont exch pop}def/mb{dup dhBdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{boldproc} exchmkFT pop pop pop exch pop}ifelse }def/mo{dup dhOdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{outproc} exchmkFT pop pop pop exch pop}ifelse }def/ms{dup dhSdh FontDirectory 1 index known{exch pop}{dup 2 indexfindfont{ShadChar} exchmkFT  pop pop pop exch pop}ifelse }def/outproc{ft1 setfontgsave chrst sfWidth grestoresetcharwidth dblsh}def/boldproc{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthft1 /PaintType get 2 ne{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def/dblsh{currentcolor currentcolorspace 1.0 setgraychrst 0 0 moveto show setcolorspace setcolorft2 0 get setfont chrst 0 0 moveto show}def/ShadChar{ft1 setfontgsavechrst sfWidth 1 index 0 ne{exch .05 add exch}ifgrestoresetcharwidthchrst .06 0 moveto show0 .05 translate dblsh}def/ts{show}def/ta{/_letterSpace xdf/_spaceXtra xdf}def/tf{/_textWidth xdf/_numSpaces xdf/_stringLength xdfdup	stringwidth pop_letterSpace _stringLength 1 sub mul add_spaceXtra _numSpaces mul add_textWidth exch sub /wdif xdf_spaceXtra 0 32wdif _stringLength div_letterSpace add0 6 -1 roll awidthshow}def/pb{/_PageSave save def/showpage{}def}def/pe{_PageSave restore}def/pm{_pm currentmatrix pop}def/_pm matrix def/ps{showpage _pm setmatrix}deflevel2{/ef {gsave 6 array astore concat dup execform grestore}def}{/ef{gsave 6 array astore concat newpath dup begin Matrix concatBBox dup dup 0 get exch 1 get movetodup dup 0 get exch 3 get linetodup dup 2 get exch 3 get linetodup 2 get exch 1 get lineto closepathclip newpath PaintProc end grestore}def}ifelse/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def/ec{pop restore}def/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def/setoverprint where {pop}{/setoverprint{pop}def}ifelse/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def/DSIEndPaintProc{currentdict end}def/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 	/FormType 1 def /PaintProc { /pp get exec } def /pp} def/DSIEndPaintSubProc {bind def end pD} def/iaa {/ix ix ixn add def} def/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def/ias {/st0 ia ix get def iaa st0} def/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} definitializeend%%EndResourceCVDict begin 0 id 1 fd_encodArr 0[39/quotesingle 96/grave128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis] put_encodArr 1[39/quotesingle 96/grave128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron] putend%%EndProlog %%BeginSetup CVDict begin/ttn {dup level2 {/Font resourcestatus {pop pop exch}if}{FontDirectory exch known {exch}if}ifelse pop dup dup} def/___FN4-1 /GoudyOldStyleT-Bold dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known {-1}{-1} ifelse end} {pop -1} ifelse rf0 id1 fd0 145 translate2540 -2540 scli%%EndSetup %%BeginPageSetup pm%%EndPageSetup/DeviceCMYK scs0 0 0 1. f40.1250 0.1250 sp 0 lc 2 ljT sa%page rect: 83 240 533 385 stm0.1094 0.0195 0.3398 0 f4np15875.0551 5085.5153 mt0. 5085.5153 li0. -0.0001 li15875.0551 -0.0001 lidertmstm0.2578 0.1016 0.6953 0.0117 f4np15842.9921 4535.7299 mt0. 4535.7299 li0. 2955.0967 li15842.9921 2955.0967 lidertmstmstm20000.0000 0.0000 translate0 0 0 1. f40.1250 0.1250 sp0.7695 0.4102 0.8086 0.3203 f4stm1.9481 0.0000 0.0000 1.9481 18592.3420 -5206.2164 cs1587.4997 fts/___FN4-1 cvsf0.7695 0.4102 0.8086 0.3203 f4F sa-19669.552 4155.9438 mt(GRAMENE) [1166.60 1096.06 1092.96 1403.01 934.83 1205.35 0 ] xshowT sartmrtmrtmstm0.0039 0.1211 0.7617 0 f4np3119.3221 4391.156 mt3046.8543 4259.001 3007.9846 4106.3662 3007.9846 3948.9969 ct3007.9846 3815.895 3035.7912 3679.4071 3094.5943 3549.0589 ct3179.0952 3361.7438 3315.4647 3214.0229 3476.241 3117.511 ct3548.7089 3249.666 3587.5785 3402.2997 3587.5785 3559.6679 ct3587.5785 3692.7709 3559.7719 3829.2598 3500.9699 3959.6091 ct3416.4679 4146.9231 3280.0995 4294.644 3119.3221 4391.156 ctcpde0.0039 0.1211 0.7617 0 f40.0016 0.0016 sp14.3 lm 0 ljnp3119.3221 4391.156 mt3046.8543 4259.001 3007.9846 4106.3662 3007.9846 3948.9969 ct3007.9846 3815.895 3035.7912 3679.4071 3094.5943 3549.0589 ct3179.0952 3361.7438 3315.4647 3214.0229 3476.241 3117.511 ct3548.7089 3249.666 3587.5785 3402.2997 3587.5785 3559.6679 ct3587.5785 3692.7709 3559.7719 3829.2598 3500.9699 3959.6091 ct3416.4679 4146.9231 3280.0995 4294.644 3119.3221 4391.156 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np2071.2936 4305.252 mt1998.8258 4173.097 1959.9561 4020.4623 1959.9561 3863.0929 ct1959.9561 3729.991 1987.7627 3593.5031 2046.5658 3463.155 ct2131.0667 3275.8398 2267.4361 3128.119 2428.2125 3031.607 ct2500.6803 3163.762 2539.55 3316.3957 2539.55 3473.764 ct2539.55 3606.8669 2511.7434 3743.3559 2452.9413 3873.7051 ct2368.4394 4061.0192 2232.071 4208.74 2071.2936 4305.252 ctcpde0.0039 0.1211 0.7617 0 f4np2071.2936 4305.252 mt1998.8258 4173.097 1959.9561 4020.4623 1959.9561 3863.0929 ct1959.9561 3729.991 1987.7627 3593.5031 2046.5658 3463.155 ct2131.0667 3275.8398 2267.4361 3128.119 2428.2125 3031.607 ct2500.6803 3163.762 2539.55 3316.3957 2539.55 3473.764 ct2539.55 3606.8669 2511.7434 3743.3559 2452.9413 3873.7051 ct2368.4394 4061.0192 2232.071 4208.74 2071.2936 4305.252 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np1734.6746 4256.4174 mt1587.53 4223.8008 1447.1315 4152.4198 1328.7939 4048.689 ct1228.7048 3960.9542 1144.3983 3850.0777 1085.1402 3719.9396 ct999.9833 3532.9275 978.7897 3333.0103 1012.1917 3148.4943 ct1159.3364 3181.111 1299.7341 3252.4913 1418.0709 3356.2214 ct1518.1608 3443.9569 1602.4681 3554.8341 1661.7276 3684.972 ct1746.883 3871.9843 1768.0774 4071.9007 1734.6746 4256.4174 ctcpde0.0039 0.1211 0.7617 0 f4np1734.6746 4256.4174 mt1587.53 4223.8008 1447.1315 4152.4198 1328.7939 4048.689 ct1228.7048 3960.9542 1144.3983 3850.0777 1085.1402 3719.9396 ct999.9833 3532.9275 978.7897 3333.0103 1012.1917 3148.4943 ct1159.3364 3181.111 1299.7341 3252.4913 1418.0709 3356.2214 ct1518.1608 3443.9569 1602.4681 3554.8341 1661.7276 3684.972 ct1746.883 3871.9843 1768.0774 4071.9007 1734.6746 4256.4174 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np618.7275 4409.7849 mt488.7461 4333.4959 377.1056 4222.3964 296.4056 4087.2997 ct228.15 3973.0359 182.0292 3841.6059 165.6665 3699.5514 ct142.1514 3495.4145 183.4681 3298.6696 271.9976 3133.37 ct401.9789 3209.6589 513.6189 3320.7576 594.3184 3455.8533 ct662.5745 3570.118 708.6958 3701.549 725.06 3843.6038 ct748.5736 4047.7403 707.2579 4244.4846 618.7275 4409.7849 ctcpde0.0039 0.1211 0.7617 0 f4np618.7275 4409.7849 mt488.7461 4333.4959 377.1056 4222.3964 296.4056 4087.2997 ct228.15 3973.0359 182.0292 3841.6059 165.6665 3699.5514 ct142.1514 3495.4145 183.4681 3298.6696 271.9976 3133.37 ct401.9789 3209.6589 513.6189 3320.7576 594.3184 3455.8533 ct662.5745 3570.118 708.6958 3701.549 725.06 3843.6038 ct748.5736 4047.7403 707.2579 4244.4846 618.7275 4409.7849 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np3701.1116 4095.4934 mt3759.8733 3956.7003 3855.534 3831.5717 3979.008 3734.0054 ct4083.4415 3651.4844 4207.7714 3588.6817 4346.5012 3554.0057 ct4545.8603 3504.174 4746.3107 3519.5868 4921.7139 3585.8983 ct4862.9522 3724.6914 4767.2923 3849.8193 4643.8191 3947.385 ct4539.3848 4029.9066 4415.0541 4092.71 4276.3241 4127.3874 ct4076.9652 4177.2177 3876.5154 4161.8057 3701.1116 4095.4934 ctcpde0.0039 0.1211 0.7617 0 f4np3701.1116 4095.4934 mt3759.8733 3956.7003 3855.534 3831.5717 3979.008 3734.0054 ct4083.4415 3651.4844 4207.7714 3588.6817 4346.5012 3554.0057 ct4545.8603 3504.174 4746.3107 3519.5868 4921.7139 3585.8983 ct4862.9522 3724.6914 4767.2923 3849.8193 4643.8191 3947.385 ct4539.3848 4029.9066 4415.0541 4092.71 4276.3241 4127.3874 ct4076.9652 4177.2177 3876.5154 4161.8057 3701.1116 4095.4934 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np5552.0945 4341.6552 mt5416.0995 4276.6818 5295.4223 4175.4648 5203.536 4047.7085 ct5125.8192 3939.6531 5068.6994 3812.6129 5040.3283 3672.4586 ct4999.5569 3471.0524 5024.0123 3271.5043 5098.1821 3099.278 ct5234.1772 3164.2514 5354.8537 3265.4676 5446.7394 3393.223 ct5524.4568 3501.2792 5581.5772 3628.3202 5609.9498 3768.4748 ct5650.7198 3969.8808 5626.2652 4169.4282 5552.0945 4341.6552 ctcpde0.0039 0.1211 0.7617 0 f4np5552.0945 4341.6552 mt5416.0995 4276.6818 5295.4223 4175.4648 5203.536 4047.7085 ct5125.8192 3939.6531 5068.6994 3812.6129 5040.3283 3672.4586 ct4999.5569 3471.0524 5024.0123 3271.5043 5098.1821 3099.278 ct5234.1772 3164.2514 5354.8537 3265.4676 5446.7394 3393.223 ct5524.4568 3501.2792 5581.5772 3628.3202 5609.9498 3768.4748 ct5650.7198 3969.8808 5626.2652 4169.4282 5552.0945 4341.6552 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np7805.36 4410.0461 mt7655.578 4393.3037 7508.3707 4337.2991 7379.6493 4246.7774 ct7270.7776 4170.2147 7175.1311 4068.9597 7102.3365 3945.8826 ct6997.7272 3769.0173 6955.34 3572.5011 6968.8789 3385.4774 ct7118.6609 3402.2198 7265.8673 3458.2238 7394.5879 3548.745 ct7503.4604 3625.3082 7599.1077 3726.5638 7671.9038 3849.6407 ct7776.5117 4026.5063 7818.8995 4223.0216 7805.36 4410.0461 ctcpde0.0039 0.1211 0.7617 0 f4np7805.36 4410.0461 mt7655.578 4393.3037 7508.3707 4337.2991 7379.6493 4246.7774 ct7270.7776 4170.2147 7175.1311 4068.9597 7102.3365 3945.8826 ct6997.7272 3769.0173 6955.34 3572.5011 6968.8789 3385.4774 ct7118.6609 3402.2198 7265.8673 3458.2238 7394.5879 3548.745 ct7503.4604 3625.3082 7599.1077 3726.5638 7671.9038 3849.6407 ct7776.5117 4026.5063 7818.8995 4223.0216 7805.36 4410.0461 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np6021.1483 4328.0813 mt5956.4362 4191.9642 5926.4483 4037.3426 5935.5379 3880.2395 ct5943.2257 3747.3629 5978.8687 3612.712 6045.1011 3485.9807 ct6140.2782 3303.8632 6284.9492 3164.2689 6451.028 3077.2065 ct6515.74 3213.3236 6545.7279 3367.9441 6536.6385 3525.0462 ct6528.9505 3657.9239 6493.3075 3792.5759 6427.0761 3919.3082 ct6331.898 4101.4246 6187.2281 4241.019 6021.1483 4328.0813 ctcpde0.0039 0.1211 0.7617 0 f4np6021.1483 4328.0813 mt5956.4362 4191.9642 5926.4483 4037.3426 5935.5379 3880.2395 ct5943.2257 3747.3629 5978.8687 3612.712 6045.1011 3485.9807 ct6140.2782 3303.8632 6284.9492 3164.2689 6451.028 3077.2065 ct6515.74 3213.3236 6545.7279 3367.9441 6536.6385 3525.0462 ct6528.9505 3657.9239 6493.3075 3792.5759 6427.0761 3919.3082 ct6331.898 4101.4246 6187.2281 4241.019 6021.1483 4328.0813 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np10953.7649 4373.9752 mt10881.2971 4241.8202 10842.4274 4089.1854 10842.4274 3931.8161 ct10842.4274 3798.7142 10870.234 3662.2263 10929.0371 3531.8781 ct11013.538 3344.563 11149.9074 3196.8421 11310.6838 3100.3302 ct11383.1516 3232.4852 11422.0213 3385.1189 11422.0213 3542.4872 ct11422.0213 3675.5901 11394.2147 3812.079 11335.4126 3942.4283 ct11250.9107 4129.7423 11114.5423 4277.4632 10953.7649 4373.9752 ctcpde0.0039 0.1211 0.7617 0 f4np10953.7649 4373.9752 mt10881.2971 4241.8202 10842.4274 4089.1854 10842.4274 3931.8161 ct10842.4274 3798.7142 10870.234 3662.2263 10929.0371 3531.8781 ct11013.538 3344.563 11149.9074 3196.8421 11310.6838 3100.3302 ct11383.1516 3232.4852 11422.0213 3385.1189 11422.0213 3542.4872 ct11422.0213 3675.5901 11394.2147 3812.079 11335.4126 3942.4283 ct11250.9107 4129.7423 11114.5423 4277.4632 10953.7649 4373.9752 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np9905.7364 4288.0712 mt9833.2685 4155.9162 9794.3989 4003.2815 9794.3989 3845.9121 ct9794.3989 3712.8102 9822.2055 3576.3223 9881.0086 3445.9742 ct9965.5095 3258.659 10101.8789 3110.9382 10262.6552 3014.4262 ct10335.1231 3146.5812 10373.9928 3299.2149 10373.9928 3456.5832 ct10373.9928 3589.6861 10346.1862 3726.1751 10287.3841 3856.5243 ct10202.8821 4043.8384 10066.5138 4191.5592 9905.7364 4288.0712 ctcpde0.0039 0.1211 0.7617 0 f4np9905.7364 4288.0712 mt9833.2685 4155.9162 9794.3989 4003.2815 9794.3989 3845.9121 ct9794.3989 3712.8102 9822.2055 3576.3223 9881.0086 3445.9742 ct9965.5095 3258.659 10101.8789 3110.9382 10262.6552 3014.4262 ct10335.1231 3146.5812 10373.9928 3299.2149 10373.9928 3456.5832 ct10373.9928 3589.6861 10346.1862 3726.1751 10287.3841 3856.5243 ct10202.8821 4043.8384 10066.5138 4191.5592 9905.7364 4288.0712 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np9569.0009 4239.2205 mt9421.8562 4206.6038 9281.4578 4135.2228 9163.1201 4031.492 ct9063.031 3943.7573 8978.7245 3832.8808 8919.4664 3702.7427 ct8834.3096 3515.7305 8813.1159 3315.8133 8846.518 3131.2974 ct8993.6626 3163.9141 9134.0603 3235.2944 9252.3971 3339.0245 ct9352.4871 3426.7599 9436.7943 3537.6371 9496.0539 3667.7751 ct9581.2093 3854.7874 9602.4036 4054.7038 9569.0009 4239.2205 ctcpde0.0039 0.1211 0.7617 0 f4np9569.0009 4239.2205 mt9421.8562 4206.6038 9281.4578 4135.2228 9163.1201 4031.492 ct9063.031 3943.7573 8978.7245 3832.8808 8919.4664 3702.7427 ct8834.3096 3515.7305 8813.1159 3315.8133 8846.518 3131.2974 ct8993.6626 3163.9141 9134.0603 3235.2944 9252.3971 3339.0245 ct9352.4871 3426.7599 9436.7943 3537.6371 9496.0539 3667.7751 ct9581.2093 3854.7874 9602.4036 4054.7038 9569.0009 4239.2205 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np8453.1068 4392.7348 mt8323.1254 4316.4459 8211.4849 4205.3463 8130.7849 4070.2497 ct8062.5293 3955.9859 8016.4085 3824.5558 8000.0458 3682.5014 ct7976.5307 3478.3645 8017.8474 3281.6196 8106.3769 3116.3199 ct8236.3582 3192.6089 8347.9982 3303.7075 8428.6977 3438.8033 ct8496.9538 3553.068 8543.0751 3684.4989 8559.4393 3826.5538 ct8582.9529 4030.6903 8541.6372 4227.4346 8453.1068 4392.7348 ctcpde0.0039 0.1211 0.7617 0 f4np8453.1068 4392.7348 mt8323.1254 4316.4459 8211.4849 4205.3463 8130.7849 4070.2497 ct8062.5293 3955.9859 8016.4085 3824.5558 8000.0458 3682.5014 ct7976.5307 3478.3645 8017.8474 3281.6196 8106.3769 3116.3199 ct8236.3582 3192.6089 8347.9982 3303.7075 8428.6977 3438.8033 ct8496.9538 3553.068 8543.0751 3684.4989 8559.4393 3826.5538 ct8582.9529 4030.6903 8541.6372 4227.4346 8453.1068 4392.7348 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np11535.6441 4078.343 mt11594.4058 3939.5499 11690.0665 3814.4213 11813.5405 3716.855 ct11917.974 3634.334 12042.3039 3571.5313 12181.0337 3536.8553 ct12380.3928 3487.0236 12580.8432 3502.4364 12756.2464 3568.7479 ct12697.4847 3707.541 12601.8248 3832.6689 12478.3516 3930.2346 ct12373.9173 4012.7562 12249.5866 4075.5596 12110.8566 4110.237 ct11911.4977 4160.0673 11711.0479 4144.6553 11535.6441 4078.343 ctcpde0.0039 0.1211 0.7617 0 f4np11535.6441 4078.343 mt11594.4058 3939.5499 11690.0665 3814.4213 11813.5405 3716.855 ct11917.974 3634.334 12042.3039 3571.5313 12181.0337 3536.8553 ct12380.3928 3487.0236 12580.8432 3502.4364 12756.2464 3568.7479 ct12697.4847 3707.541 12601.8248 3832.6689 12478.3516 3930.2346 ct12373.9173 4012.7562 12249.5866 4075.5596 12110.8566 4110.237 ct11911.4977 4160.0673 11711.0479 4144.6553 11535.6441 4078.343 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np13386.6353 4324.5037 mt13250.6403 4259.5303 13129.9631 4158.3132 13038.0768 4030.557 ct12960.36 3922.5016 12903.2402 3795.4614 12874.8691 3655.3071 ct12834.0977 3453.9009 12858.5531 3254.3528 12932.7229 3082.1264 ct13068.718 3147.0999 13189.3945 3248.316 13281.2802 3376.0715 ct13358.9976 3484.1277 13416.118 3611.1687 13444.4906 3751.3233 ct13485.2605 3952.7293 13460.806 4152.2767 13386.6353 4324.5037 ctcpde0.0039 0.1211 0.7617 0 f4np13386.6353 4324.5037 mt13250.6403 4259.5303 13129.9631 4158.3132 13038.0768 4030.557 ct12960.36 3922.5016 12903.2402 3795.4614 12874.8691 3655.3071 ct12834.0977 3453.9009 12858.5531 3254.3528 12932.7229 3082.1264 ct13068.718 3147.0999 13189.3945 3248.316 13281.2802 3376.0715 ct13358.9976 3484.1277 13416.118 3611.1687 13444.4906 3751.3233 ct13485.2605 3952.7293 13460.806 4152.2767 13386.6353 4324.5037 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np15639.7575 4392.8527 mt15489.9755 4376.1104 15342.7682 4320.1058 15214.0468 4229.584 ct15105.1751 4153.0213 15009.5287 4051.7663 14936.7341 3928.6892 ct14832.1247 3751.8239 14789.7376 3555.3078 14803.2764 3368.2841 ct14953.0584 3385.0264 15100.2649 3441.0304 15228.9854 3531.5516 ct15337.858 3608.1149 15433.5053 3709.3705 15506.3014 3832.4473 ct15610.9092 4009.3129 15653.297 4205.8282 15639.7575 4392.8527 ctcpde0.0039 0.1211 0.7617 0 f4np15639.7575 4392.8527 mt15489.9755 4376.1104 15342.7682 4320.1058 15214.0468 4229.584 ct15105.1751 4153.0213 15009.5287 4051.7663 14936.7341 3928.6892 ct14832.1247 3751.8239 14789.7376 3555.3078 14803.2764 3368.2841 ct14953.0584 3385.0264 15100.2649 3441.0304 15228.9854 3531.5516 ct15337.858 3608.1149 15433.5053 3709.3705 15506.3014 3832.4473 ct15610.9092 4009.3129 15653.297 4205.8282 15639.7575 4392.8527 ctcpdsrtmstm0.0039 0.1211 0.7617 0 f4np13855.589 4310.8376 mt13790.8769 4174.7205 13760.889 4020.0989 13769.9786 3862.9959 ct13777.6664 3730.1192 13813.3094 3595.4683 13879.5418 3468.7371 ct13974.7189 3286.6195 14119.3899 3147.0252 14285.4686 3059.9628 ct14350.1807 3196.0799 14380.1686 3350.7005 14371.0792 3507.8025 ct14363.3912 3640.6802 14327.7482 3775.3322 14261.5168 3902.0645 ct14166.3387 4084.1809 14021.6688 4223.7753 13855.589 4310.8376 ctcpde0.0039 0.1211 0.7617 0 f4np13855.589 4310.8376 mt13790.8769 4174.7205 13760.889 4020.0989 13769.9786 3862.9959 ct13777.6664 3730.1192 13813.3094 3595.4683 13879.5418 3468.7371 ct13974.7189 3286.6195 14119.3899 3147.0252 14285.4686 3059.9628 ct14350.1807 3196.0799 14380.1686 3350.7005 14371.0792 3507.8025 ct14363.3912 3640.6802 14327.7482 3775.3322 14261.5168 3902.0645 ct14166.3387 4084.1809 14021.6688 4223.7753 13855.589 4310.8376 ctcpdsrtmterminate